**  MINI BOOK PROJECT******************************************************
**  PROPS *****************************************************************
    Passing property to the function <Book/>
    Example:
        function BookList() {
          return (
            <section className='booklist'>
              <Book job ="developer"/>
              <Book title = "random title" number = {22}/>
            </section>
          )
        }
    It shows an object (prototype: object) for each and with:
    Property of job & the value is developer
    Property of title and number & the value is random title and 22

    **  How to Access its value?

        const Book = (props) => {
          return (
            <article className='book'>
              <p>{props.job}</p>
              <p>{props.title}</p>
            </article>
          );
        };

**  Refactor below to an Object **************************************************
    const title = 'I Love You to the Moon and Back';
    const author = 'Amelia Hepworth';
    const img =
      'https://images-na.ssl-images-amazon.com/images/I/8144Vic9C5L._AC_UL600_SR600,400_.jpg';

    * Refactured
    const firstBook = {
        title: "I Love You to the Moon and Back",
        author: "Amelia Hepworth",
        img: "https://images-na.ssl-images-amazon.com/images/I/8144Vic9C5L._AC_UL600_SR600,400_.jpg"
    }

    **  How to Access the firstBook?
        function BookList() {
          return (
            <section className='booklist'>
              <Book img = {firstBook.img} title = {firstBook.title} author ={firstBook.            author}/>
              <Book title = "random title" number = {22}/>
            </section>
          )
        }
        const Book = (props) => {
          return (
            <article className='book'>
              <img src={props.img} alt='book for kids' />
              <h4>{props.title}</h4>
              <h6>{props.author}</h6>
            </article>
          );
        };
        ReactDOM.render(<BookList />, document.getElementById('root'))

**  PROPS - DESTRUCTURING ******************************************************
    Above code const Book ... desctructured
        const Book = (props) => {
          const {img, title, author} = props
          return (
            <article className='book'>
              <img src={img} alt='book for kids' />
              <h4>{title}</h4>
              <h6>{author}</h6>
            </article>
          )
        }

    Another way to destructure:
        const Book = {{ img, title, author }} => {
          return (
            <article className='book'>
              <img src={img} alt='book for kids' />
              <h4>{title}</h4>
              <h6>{author}</h6>
            </article>
          )
        }

**  PROPS - CHILDREN ***********************************************************
    Example:
    <Book
        img={firstBook.img}
        title={firstBook.title}
        author={firstBook.author}>

      <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Impedit a nam unde deserunt nesciunt quos dolorem voluptates. Temporibus, ex consectetur!</p>
      </Book>

      **  How to Access the <p> as it's children?
          const Book = (props) => {
            const {img, title, author, children} = props
            // Render Area
            return (
              <article className='book'>
                <img src={img} alt='book for kids' />
                <h4>{title}</h4>
                <h6>{author}</h6>
                {children} // this can be place anywhere in the Render Area
              </article>
            )

**  WHOLE CODE BEFORE SIMPLIFYING THE LIST *************************************
          import React from 'react'
          import ReactDOM from 'react-dom'
          import './index.css'

          //  Mini Book Project
          //  Components
          const firstBook = {
            title: 'I Love You to the Moon and Back',
            author: 'Amelia Hepworth',
            img: 'https://images-na.ssl-images-amazon.com/images/I/8144Vic9C5L.         _AC_UL600_SR600,400_.jpg',
          }

          const secondBook = {
            title: "I'm So Glad You Were Born: Celebrating Who You Are ",
            author: 'Ainsley Earhardt',
            img: 'https://images-na.ssl-images-amazon.com/images/I/9193GbyIvxL.         _AC_UL600_SR600,400_.jpg',
          }

          function BookList() {
            return (
              <section className='booklist'>
                <Book
                  img={firstBook.img}
                  title={firstBook.title}
                  author={firstBook.author}
                />

                <Book
                  img={secondBook.img}
                  title={secondBook.title}
                  author={secondBook.author}
                />
              </section>
            )
          }

          // Book function
          const Book = (props) => {
            const { img, title, author } = props
            // Rendering Area
            return (
              <article className='book'>
                <img src={img} alt='book for kids' />
                <h4>{title}</h4>
                <h6>{author}</h6>
              </article>
            )
          }

          ReactDOM.render(<BookList />, document.getElementById('root'))

**  SIMPLIFYING THE LIST INTO ARRAY *********************************************
    **  METHOD 1 - USING MAP METHOD
    Example: const names = ['john', 'peter', 'susan'];
             const newName = names.map((name) => {
             return <h1>{name}</>
             });
             console.log(newName); //3 Objects
             // johnpetersusan
    Example: Based on above code
              {
                id: 3,
                title: "Harry Potter and the Order of the Phoenix",
                author: 'J. K. Rowling ',
                img: 'https://images-na.ssl-images-amazon.com/images/I/71tR2ZEgPYL.           _AC_UL600_SR600,400_.jpg',
              },

            //Make sure add KEY ID in the list to avoid error
             function BookList() {
               return (
               <section className='booklist'>
                 {books.map((book)=> {
            // ALT - {books.map((book, index)=>)}
            // book a param that points to above list equals
                 return <Book key= {book.id} book={book}></Book>
            // ALT return with Indes - key = {index}
               })}
               </section>
               );
             }

             // Book function - Render Area
             const Book = (props) => {
               // props with an object
               const { img, title, author } = props.book;
               // Rendering Area
               return (
                 <article className='book'>
                   <img src={img} alt='book for kids' />
                   <h4>{title}</h4>
                   <h6>{author}</h6>
                 </article>
               )
             }

    **  METHOD 2 - SPREAD METHOD
        function BookList() {
          return (
          <section className='booklist'>
            {books.map((book)=> {
            return <Book key={book.id} {...book}></Book>
          })}
          </section>
          );
        }

        // Book function - Render Area
        const Book = (props) => {
          const { img, title, author } = props;
        // OR Simply
        const Book = ({img, title, author}) => {

**  EVENT BASICS **************************************************************
    * Attribute, Event Handler (onClick, onMouseOver)

    * ONCLICK EVENT
    Option 1 - onClick (Setup as A Reference)
    const clickHandler = () ={
      alert('hello world');
    }
    <button type="button" onClick={clickHandler}>Reference Example</button>

    Option 2 - onClick (Setup as Inline Function)
    <h1 onClick={() => console.log(title)}>{title}</h1>

    * Complex Example
    const complexExample = (author) => {
      console.log(author);
    };
    <button type = 'button' onClick = {() => complexExample(author)}>
      Complex Example </button>

    * ONMOUSEOVER EVENT
      Example:
      <article className = 'book' onMouseOver={() => {
        console.log(title);
      }};

**  IMPORT & EXPORT STATEMENTS **************************************************
    Example:
    //books.js
    export const books = [
      {
        id: 1,
        title: 'I Love You to the Moon and Back',
        author: 'Amelia Hepworth',
        img: 'https://images-na.ssl-images-amazon.com/images/I/8144Vic9C5L. _AC_UL600_SR600,400_.jpg',
      }
    ]
    //index.js
    import { books } from './books';

    **  rafce - React Arror Function Component with E7
     *  Only one DEFAULT EXPORT per file

        //Book.js (Naming of File when it is DEFAULT - First Letter CAPS)
        import React from 'react'
        const Book = () => {
          return (
            <div>Book</div>
          )
        }
        export default Book

        //index.js
        import Book from './Book';

    **  Export / Import within a folder (Folder is same level of index.js)
        //  ./testing/testing
        export let greeting = 'hello world';

        //  index.js
        import { greeting } from './testing/testing'

**  FREE HOSTING
    How to move your App from a localhost to URL?
    netlify
<<<<<<< HEAD
    heroku
=======


>>>>>>> e7ced99b858d818bea794b49a42ade57aaf6640a








